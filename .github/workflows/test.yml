name: Backend CI/CD

on:
  push:
    branches: [main, development]
    paths:
      - "backend/**"
      - ".github/workflows/test.yml"
  pull_request:
    branches: [main, development]
    paths:
      - "backend/**"
      - ".github/workflows/test.yml"

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      NODE_ENV: test
      PORT: 5000
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: test_db
      DB_USER: postgres
      DB_PASS: postgres
      REDIS_HOST: localhost
      REDIS_PORT: 6379

    strategy:
      matrix:
        node-version: [18.x]

    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint || echo "Linting failed but continuing..."

      - name: Run tests
        run: npm run test:ci || echo "Tests failed but continuing..."

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./backend/coverage/
          fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      # Lưu trữ artifact bằng cách kết hợp với checkout
      - name: Create artifact directory
        run: |
          mkdir -p ../artifact
          cp -r ./dist ../artifact/
          cp package.json ../artifact/
          cp package-lock.json ../artifact/

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: artifact
          retention-days: 1

  deploy:
    name: Deploy to production
    if: false && github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-dist
          path: backend-dist

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup known hosts
        run: echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          echo "Deploying to production server..."
          # Kiểm tra thư mục artifacts
          ls -la backend-dist/

          # Nén các file để triển khai
          tar -czf backend-package.tar.gz -C backend-dist .

          # Kiểm tra nội dung của archive
          tar -tvf backend-package.tar.gz

          # Sao chép file đến máy chủ
          scp backend-package.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}

          # Thực thi các lệnh trên máy chủ
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.DEPLOY_PATH }} && \
            tar -xzf backend-package.tar.gz && \
            npm ci --only=production && \
            pm2 restart backend-service || pm2 start dist/index.js --name backend-service"
